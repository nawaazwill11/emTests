# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-04-12 11:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('album_id', models.CharField(max_length=26, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'album',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contribute',
            fields=[
                ('contribute_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=100)),
                ('location_type', models.CharField(max_length=100)),
                ('season', models.CharField(blank=True, max_length=100, null=True)),
                ('attractions', models.CharField(blank=True, max_length=1000, null=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to='contribute/')),
                ('video', models.FileField(blank=True, null=True, upload_to='contribute/')),
                ('username', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'contribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Emergency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_id', models.CharField(max_length=26)),
                ('emergency_requestor', models.CharField(max_length=26)),
                ('emergency_respondor', models.CharField(max_length=26)),
                ('emergency_status', models.IntegerField()),
            ],
            options={
                'db_table': 'emergency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('event_privacy', models.CharField(max_length=20)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=160, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=10, null=True)),
                ('venue_name', models.CharField(blank=True, max_length=100, null=True)),
                ('street_address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.FileField(blank=True, null=True, upload_to='logo/')),
                ('cover', models.FileField(upload_to='cover/')),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('activity', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=8, null=True)),
                ('age', models.CharField(blank=True, max_length=20, null=True)),
                ('participants', models.IntegerField(blank=True, null=True)),
                ('fees', models.FloatField(blank=True, null=True)),
                ('created_on', models.DateTimeField()),
                ('username', models.CharField(max_length=50)),
                ('ownership', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventParticipants',
            fields=[
                ('part_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('event_id', models.CharField(max_length=32)),
                ('username', models.CharField(max_length=200)),
                ('ownership', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'event_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('liked_using', models.CharField(max_length=30)),
                ('assist', models.CharField(max_length=30)),
                ('recommend', models.CharField(max_length=30)),
                ('improvement', models.CharField(max_length=30)),
                ('use_again', models.CharField(max_length=30)),
                ('overall', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=160, null=True)),
                ('liked_most', models.CharField(blank=True, max_length=30, null=True)),
                ('username', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_one', models.CharField(max_length=26)),
                ('user_two', models.CharField(max_length=26)),
                ('status', models.IntegerField()),
                ('actions', models.IntegerField()),
            ],
            options={
                'db_table': 'friends',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('user_id', models.CharField(max_length=26, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=150, unique=True)),
                ('passw', models.CharField(max_length=30)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Misc',
            fields=[
                ('username', models.CharField(max_length=200)),
                ('flog', models.IntegerField()),
                ('misc_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'misc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.CharField(max_length=26, primary_key=True, serialize=False)),
                ('sender', models.CharField(max_length=26)),
                ('receiver', models.CharField(max_length=26)),
                ('url', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
                ('type', models.IntegerField()),
                ('status', models.IntegerField()),
                ('read', models.IntegerField()),
            ],
            options={
                'db_table': 'notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('photo_id', models.CharField(max_length=26, primary_key=True, serialize=False)),
                ('photo', models.BinaryField()),
                ('url', models.CharField(max_length=100)),
                ('likes', models.CharField(blank=True, max_length=26, null=True)),
                ('comment', models.CharField(blank=True, max_length=26, null=True)),
            ],
            options={
                'db_table': 'photo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pi',
            fields=[
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.CharField(max_length=150)),
                ('aboutme', models.CharField(blank=True, max_length=160, null=True)),
                ('doj', models.DateTimeField()),
                ('dob', models.DateTimeField()),
                ('birthplace', models.CharField(blank=True, max_length=100, null=True)),
                ('profilepic', models.FileField(blank=True, null=True, upload_to='profilepic/')),
                ('coverpic', models.FileField(blank=True, null=True, upload_to='coverpic/')),
                ('livesin', models.CharField(blank=True, max_length=100, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('facebook', models.CharField(blank=True, max_length=100, null=True)),
                ('twitter', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram', models.CharField(blank=True, max_length=100, null=True)),
                ('travelledplaces', models.CharField(blank=True, max_length=1000, null=True)),
                ('dreamplaces', models.CharField(blank=True, max_length=1000, null=True)),
                ('favtravplaces', models.CharField(blank=True, max_length=1000, null=True)),
                ('favtravseasons', models.CharField(blank=True, max_length=1000, null=True)),
                ('favtravmoto', models.CharField(blank=True, max_length=1000, null=True)),
                ('favtravmode', models.CharField(blank=True, max_length=1000, null=True)),
                ('school', models.CharField(blank=True, max_length=1000, null=True)),
                ('college', models.CharField(blank=True, max_length=1000, null=True)),
                ('aded', models.CharField(blank=True, max_length=1000, null=True)),
                ('currwork', models.CharField(blank=True, max_length=1000, null=True)),
                ('prevwork', models.CharField(blank=True, max_length=1000, null=True)),
                ('workskills', models.CharField(blank=True, max_length=1000, null=True)),
                ('hobbies', models.CharField(blank=True, max_length=1000, null=True)),
                ('skills', models.CharField(blank=True, max_length=1000, null=True)),
                ('interests', models.CharField(blank=True, max_length=1000, null=True)),
                ('pi_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('relationstatus', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'db_table': 'pi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollsChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('votes', models.IntegerField()),
            ],
            options={
                'db_table': 'polls_choice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollsQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'polls_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Simply',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('votes', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'simply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('story_id', models.CharField(max_length=26, primary_key=True, serialize=False)),
                ('album', models.CharField(blank=True, max_length=26, null=True)),
                ('comments', models.CharField(blank=True, max_length=26, null=True)),
                ('likes', models.CharField(blank=True, max_length=26, null=True)),
                ('time', models.DateTimeField()),
                ('description', models.CharField(blank=True, max_length=160, null=True)),
                ('share', models.CharField(max_length=50)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'story',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stupid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
            ],
            options={
                'db_table': 'stupid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('company', models.CharField(blank=True, max_length=5, null=True)),
                ('moto', models.CharField(blank=True, max_length=5, null=True)),
                ('fuel', models.FloatField(blank=True, null=True)),
                ('vehicle', models.FloatField(blank=True, null=True)),
                ('hotel', models.FloatField(blank=True, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('mode', models.CharField(blank=True, max_length=10, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('age_group', models.CharField(blank=True, max_length=20, null=True)),
                ('participants', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=160, null=True)),
                ('trip_group', models.CharField(max_length=32)),
                ('username', models.CharField(max_length=50)),
                ('pitstops', models.IntegerField(blank=True, null=True)),
                ('pitstops_time', models.IntegerField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('destination', models.CharField(blank=True, max_length=100, null=True)),
                ('timeperpit', models.IntegerField(blank=True, null=True)),
                ('distance', models.CharField(blank=True, max_length=50, null=True)),
                ('duration', models.CharField(blank=True, max_length=50, null=True)),
                ('is_published', models.IntegerField(blank=True, null=True)),
                ('trip_privacy', models.CharField(blank=True, max_length=32, null=True)),
                ('trip_link', models.CharField(blank=True, max_length=32, null=True)),
                ('trip_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField()),
                ('ownership', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'trip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripParticipants',
            fields=[
                ('part_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('trip_id', models.CharField(max_length=32)),
                ('username', models.CharField(max_length=200)),
                ('ownership', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'trip_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('video_id', models.CharField(max_length=26, primary_key=True, serialize=False)),
                ('video', models.BinaryField()),
                ('url', models.CharField(max_length=100)),
                ('likes', models.CharField(blank=True, max_length=26, null=True)),
                ('comment', models.CharField(blank=True, max_length=26, null=True)),
            ],
            options={
                'db_table': 'video',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventBasics',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Event')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=160)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('deadline', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_basics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventLocation',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Event')),
                ('location', models.IntegerField()),
                ('venue_name', models.CharField(blank=True, max_length=100, null=True)),
                ('street_address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('country', models.CharField(blank=True, max_length=30, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'event_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventMisc',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Event')),
                ('segment', models.CharField(max_length=30)),
                ('category', models.CharField(max_length=30)),
                ('activity', models.CharField(max_length=30)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('age', models.CharField(blank=True, max_length=30, null=True)),
                ('participants', models.IntegerField(blank=True, null=True)),
                ('fees', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_misc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventPhoto',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Event')),
                ('logo', models.BinaryField(blank=True, null=True)),
                ('cover', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_photo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventRequest',
            fields=[
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Event')),
                ('requesting_user', models.CharField(max_length=26)),
                ('request_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrivacySetting',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Login')),
                ('timeline', models.IntegerField()),
                ('friends_list', models.IntegerField()),
                ('album', models.IntegerField()),
            ],
            options={
                'db_table': 'privacy_setting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripBasic',
            fields=[
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Trip')),
                ('company', models.IntegerField()),
                ('moto', models.IntegerField()),
                ('occasion', models.IntegerField()),
            ],
            options={
                'db_table': 'trip_basic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripCost',
            fields=[
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Trip')),
                ('fuel', models.FloatField(blank=True, null=True)),
                ('vehicle', models.FloatField(blank=True, null=True)),
                ('hotel', models.FloatField(blank=True, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trip_cost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripDate',
            fields=[
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Trip')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('age', models.CharField(blank=True, max_length=20, null=True)),
                ('participants', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=160, null=True)),
            ],
            options={
                'db_table': 'trip_date',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripRequest',
            fields=[
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Trip')),
                ('requesting_user', models.CharField(max_length=26)),
                ('request_status', models.IntegerField()),
            ],
            options={
                'db_table': 'trip_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripRoute',
            fields=[
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='em.Trip')),
                ('source', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('mode', models.IntegerField()),
                ('pitstops', models.IntegerField()),
                ('pitstop_duration', models.DateTimeField()),
                ('pitstop_distance', models.FloatField()),
                ('total_time', models.DateTimeField()),
                ('total_distance', models.FloatField()),
            ],
            options={
                'db_table': 'trip_route',
                'managed': False,
            },
        ),
    ]
