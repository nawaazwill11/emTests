--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.7
-- Dumped by pg_dump version 9.6.7

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: album; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE album (
    album_id character varying(26) NOT NULL,
    user_id character varying(26) NOT NULL,
    create_time timestamp without time zone NOT NULL
);


ALTER TABLE album OWNER TO postgres;

--
-- Name: contribute; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE contribute (
    contribute_id character varying(26) NOT NULL,
    user_id character varying(26) NOT NULL,
    location_name character varying(100) NOT NULL,
    type integer NOT NULL,
    season integer,
    attractions character varying(1000),
    photo bytea,
    video bytea
);


ALTER TABLE contribute OWNER TO postgres;

--
-- Name: ee; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE ee (
    user_id character varying(26) NOT NULL,
    school character varying(500),
    college character varying(500),
    editional_edu character varying(500),
    current_work character varying(500),
    previous_work character varying(500),
    work_skill character varying(500)
);


ALTER TABLE ee OWNER TO postgres;

--
-- Name: emergency; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE emergency (
    emergency_id character varying(26) NOT NULL,
    emergency_requestor character varying(26) NOT NULL,
    emergency_respondor character varying(26) NOT NULL,
    emergency_status integer NOT NULL
);


ALTER TABLE emergency OWNER TO postgres;

--
-- Name: event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE event (
    event_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    event_privacy integer NOT NULL,
    event_link character varying(100) NOT NULL,
    event_request integer NOT NULL
);


ALTER TABLE event OWNER TO postgres;

--
-- Name: event_basics; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE event_basics (
    event_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    title character varying(50) NOT NULL,
    description character varying(160) NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL,
    deadline timestamp without time zone NOT NULL
);


ALTER TABLE event_basics OWNER TO postgres;

--
-- Name: event_location; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE event_location (
    event_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    location integer NOT NULL,
    venue_name character varying(100),
    street_address character varying(100),
    city character varying(30),
    state character varying(30),
    country character varying(30),
    pincode character varying(10)
);


ALTER TABLE event_location OWNER TO postgres;

--
-- Name: event_misc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE event_misc (
    event_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    segment character varying(30) NOT NULL,
    category character varying(30) NOT NULL,
    activity character varying(30) NOT NULL,
    gender integer,
    age character varying(30),
    participants integer,
    fees double precision
);


ALTER TABLE event_misc OWNER TO postgres;

--
-- Name: event_photo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE event_photo (
    event_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    logo bytea,
    cover bytea
);


ALTER TABLE event_photo OWNER TO postgres;

--
-- Name: event_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE event_request (
    event_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    trip_admin character varying(26) NOT NULL,
    requesting_user character varying(26) NOT NULL,
    request_status integer
);


ALTER TABLE event_request OWNER TO postgres;

--
-- Name: feedback; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE feedback (
    feedback_id character varying(26) NOT NULL,
    user_id character varying(26) NOT NULL,
    liking integer NOT NULL,
    assist integer NOT NULL,
    recommend integer NOT NULL,
    improvement integer NOT NULL,
    use_again integer NOT NULL,
    overall integer NOT NULL,
    description character varying(160)
);


ALTER TABLE feedback OWNER TO postgres;

--
-- Name: friends; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE friends (
    user_one character varying(26) NOT NULL,
    user_two character varying(26) NOT NULL,
    status integer NOT NULL,
    actions integer NOT NULL
);


ALTER TABLE friends OWNER TO postgres;

--
-- Name: hi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE hi (
    user_id character varying(26) NOT NULL,
    hobbies character varying(1000),
    skills character varying(1000),
    interests character varying(1000)
);


ALTER TABLE hi OWNER TO postgres;

--
-- Name: login; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE login (
    user_id character varying(26) NOT NULL,
    username character varying(100) NOT NULL,
    email character varying(150) NOT NULL,
    passw character varying(30) NOT NULL
);


ALTER TABLE login OWNER TO postgres;

--
-- Name: misc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE misc (
    user_id character varying,
    flog integer NOT NULL
);


ALTER TABLE misc OWNER TO postgres;

--
-- Name: notification; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE notification (
    notification_id character varying(26) NOT NULL,
    sender character varying(26) NOT NULL,
    receiver character varying(26) NOT NULL,
    url character varying(100) NOT NULL,
    "time" timestamp without time zone NOT NULL,
    type integer NOT NULL,
    status integer NOT NULL,
    read integer NOT NULL
);


ALTER TABLE notification OWNER TO postgres;

--
-- Name: photo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE photo (
    photo_id character varying(26) NOT NULL,
    album_id character varying(26) NOT NULL,
    user_id character varying(26) NOT NULL,
    photo bytea NOT NULL,
    url character varying(100) NOT NULL,
    likes character varying(26),
    comment character varying(26)
);


ALTER TABLE photo OWNER TO postgres;

--
-- Name: pi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE pi (
    user_id character varying(26) NOT NULL,
    username character varying(100) NOT NULL,
    email character varying(150) NOT NULL,
    about_me character varying(160),
    doj timestamp without time zone NOT NULL,
    dob timestamp without time zone NOT NULL,
    bplace character varying(100),
    p_pic bytea,
    c_pic bytea,
    lives_in character varying(100),
    occupation character varying(100),
    gender integer NOT NULL,
    website character varying(200),
    phone_no character varying(20),
    facebook character varying(100),
    twitter character varying(100),
    instagram character varying(100)
);


ALTER TABLE pi OWNER TO postgres;

--
-- Name: privacy_setting; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE privacy_setting (
    user_id character varying(26) NOT NULL,
    timeline integer NOT NULL,
    friends_list integer NOT NULL,
    album integer NOT NULL
);


ALTER TABLE privacy_setting OWNER TO postgres;

--
-- Name: story; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE story (
    story_id character varying(26) NOT NULL,
    user_id character varying(26) NOT NULL,
    album character varying(26),
    comments character varying(26),
    likes character varying(26),
    "time" timestamp without time zone NOT NULL,
    description character varying(160),
    share character varying(50) NOT NULL,
    type integer NOT NULL
);


ALTER TABLE story OWNER TO postgres;

--
-- Name: travel_portfolio; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE travel_portfolio (
    user_id character varying(26) NOT NULL,
    travelled_places character varying(500),
    dream_places character varying(1000),
    fav_places character varying(1000),
    fav_season character varying(1000),
    fav_moto character varying(1000),
    fav_mode character varying(1000)
);


ALTER TABLE travel_portfolio OWNER TO postgres;

--
-- Name: trip; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE trip (
    trip_id character varying(30) NOT NULL,
    trip_privacy integer NOT NULL,
    trip_link character varying(26) NOT NULL,
    trip_request integer NOT NULL
);


ALTER TABLE trip OWNER TO postgres;

--
-- Name: trip_basic; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE trip_basic (
    trip_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    company integer NOT NULL,
    moto integer NOT NULL,
    occasion integer NOT NULL
);


ALTER TABLE trip_basic OWNER TO postgres;

--
-- Name: trip_cost; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE trip_cost (
    trip_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    fuel double precision,
    vehicle double precision,
    hotel double precision,
    total double precision
);


ALTER TABLE trip_cost OWNER TO postgres;

--
-- Name: trip_date; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE trip_date (
    trip_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL,
    gender integer,
    age character varying(20),
    participants integer,
    title character varying(50),
    description character varying(160)
);


ALTER TABLE trip_date OWNER TO postgres;

--
-- Name: trip_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE trip_request (
    trip_id character varying(30) NOT NULL,
    trip_admin character varying(26) NOT NULL,
    requesting_user character varying(26) NOT NULL,
    request_status integer NOT NULL
);


ALTER TABLE trip_request OWNER TO postgres;

--
-- Name: trip_route; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE trip_route (
    trip_id character varying(30) NOT NULL,
    user_id character varying(26) NOT NULL,
    source character varying(100) NOT NULL,
    destination character varying(100) NOT NULL,
    mode integer NOT NULL,
    pitstops integer NOT NULL,
    pitstop_duration timestamp without time zone NOT NULL,
    pitstop_distance double precision NOT NULL,
    total_time timestamp without time zone NOT NULL,
    total_distance double precision NOT NULL
);


ALTER TABLE trip_route OWNER TO postgres;

--
-- Name: video; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE video (
    video_id character varying(26) NOT NULL,
    album_id character varying(26) NOT NULL,
    user_id character varying(26) NOT NULL,
    video bytea NOT NULL,
    url character varying(100) NOT NULL,
    likes character varying(26),
    comment character varying(26)
);


ALTER TABLE video OWNER TO postgres;

--
-- Data for Name: album; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY album (album_id, user_id, create_time) FROM stdin;
\.


--
-- Data for Name: contribute; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY contribute (contribute_id, user_id, location_name, type, season, attractions, photo, video) FROM stdin;
\.


--
-- Data for Name: ee; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY ee (user_id, school, college, editional_edu, current_work, previous_work, work_skill) FROM stdin;
\.


--
-- Data for Name: emergency; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY emergency (emergency_id, emergency_requestor, emergency_respondor, emergency_status) FROM stdin;
\.


--
-- Data for Name: event; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY event (event_id, user_id, event_privacy, event_link, event_request) FROM stdin;
\.


--
-- Data for Name: event_basics; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY event_basics (event_id, user_id, title, description, start_date, end_date, deadline) FROM stdin;
\.


--
-- Data for Name: event_location; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY event_location (event_id, user_id, location, venue_name, street_address, city, state, country, pincode) FROM stdin;
\.


--
-- Data for Name: event_misc; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY event_misc (event_id, user_id, segment, category, activity, gender, age, participants, fees) FROM stdin;
\.


--
-- Data for Name: event_photo; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY event_photo (event_id, user_id, logo, cover) FROM stdin;
\.


--
-- Data for Name: event_request; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY event_request (event_id, user_id, trip_admin, requesting_user, request_status) FROM stdin;
\.


--
-- Data for Name: feedback; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY feedback (feedback_id, user_id, liking, assist, recommend, improvement, use_again, overall, description) FROM stdin;
\.


--
-- Data for Name: friends; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY friends (user_one, user_two, status, actions) FROM stdin;
\.


--
-- Data for Name: hi; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY hi (user_id, hobbies, skills, interests) FROM stdin;
\.


--
-- Data for Name: login; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY login (user_id, username, email, passw) FROM stdin;
\.


--
-- Data for Name: misc; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY misc (user_id, flog) FROM stdin;
\.


--
-- Data for Name: notification; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY notification (notification_id, sender, receiver, url, "time", type, status, read) FROM stdin;
\.


--
-- Data for Name: photo; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY photo (photo_id, album_id, user_id, photo, url, likes, comment) FROM stdin;
\.


--
-- Data for Name: pi; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY pi (user_id, username, email, about_me, doj, dob, bplace, p_pic, c_pic, lives_in, occupation, gender, website, phone_no, facebook, twitter, instagram) FROM stdin;
\.


--
-- Data for Name: privacy_setting; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY privacy_setting (user_id, timeline, friends_list, album) FROM stdin;
\.


--
-- Data for Name: story; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY story (story_id, user_id, album, comments, likes, "time", description, share, type) FROM stdin;
\.


--
-- Data for Name: travel_portfolio; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY travel_portfolio (user_id, travelled_places, dream_places, fav_places, fav_season, fav_moto, fav_mode) FROM stdin;
\.


--
-- Data for Name: trip; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY trip (trip_id, trip_privacy, trip_link, trip_request) FROM stdin;
\.


--
-- Data for Name: trip_basic; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY trip_basic (trip_id, user_id, company, moto, occasion) FROM stdin;
\.


--
-- Data for Name: trip_cost; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY trip_cost (trip_id, user_id, fuel, vehicle, hotel, total) FROM stdin;
\.


--
-- Data for Name: trip_date; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY trip_date (trip_id, user_id, start_date, end_date, gender, age, participants, title, description) FROM stdin;
\.


--
-- Data for Name: trip_request; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY trip_request (trip_id, trip_admin, requesting_user, request_status) FROM stdin;
\.


--
-- Data for Name: trip_route; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY trip_route (trip_id, user_id, source, destination, mode, pitstops, pitstop_duration, pitstop_distance, total_time, total_distance) FROM stdin;
\.


--
-- Data for Name: video; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY video (video_id, album_id, user_id, video, url, likes, comment) FROM stdin;
\.


--
-- Name: album album_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY album
    ADD CONSTRAINT album_pkey PRIMARY KEY (album_id);


--
-- Name: contribute contribute_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY contribute
    ADD CONSTRAINT contribute_pkey PRIMARY KEY (contribute_id);


--
-- Name: ee ee_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY ee
    ADD CONSTRAINT ee_pkey PRIMARY KEY (user_id);


--
-- Name: event_basics event_basics_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_basics
    ADD CONSTRAINT event_basics_pkey PRIMARY KEY (event_id);


--
-- Name: event_location event_location_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_location
    ADD CONSTRAINT event_location_pkey PRIMARY KEY (event_id);


--
-- Name: event_misc event_misc_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_misc
    ADD CONSTRAINT event_misc_pkey PRIMARY KEY (event_id);


--
-- Name: event_photo event_photo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_photo
    ADD CONSTRAINT event_photo_pkey PRIMARY KEY (event_id);


--
-- Name: event event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event
    ADD CONSTRAINT event_pkey PRIMARY KEY (event_id);


--
-- Name: event_request event_request_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_request
    ADD CONSTRAINT event_request_pkey PRIMARY KEY (event_id);


--
-- Name: feedback feedback_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY feedback
    ADD CONSTRAINT feedback_pkey PRIMARY KEY (feedback_id);


--
-- Name: hi hi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY hi
    ADD CONSTRAINT hi_pkey PRIMARY KEY (user_id);


--
-- Name: login login_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY login
    ADD CONSTRAINT login_email_key UNIQUE (email);


--
-- Name: login login_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY login
    ADD CONSTRAINT login_pkey PRIMARY KEY (user_id);


--
-- Name: notification notification_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY notification
    ADD CONSTRAINT notification_pkey PRIMARY KEY (notification_id);


--
-- Name: photo photo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY photo
    ADD CONSTRAINT photo_pkey PRIMARY KEY (photo_id);


--
-- Name: pi pi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY pi
    ADD CONSTRAINT pi_pkey PRIMARY KEY (user_id);


--
-- Name: privacy_setting privacy_setting_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY privacy_setting
    ADD CONSTRAINT privacy_setting_pkey PRIMARY KEY (user_id);


--
-- Name: story story_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY story
    ADD CONSTRAINT story_pkey PRIMARY KEY (story_id);


--
-- Name: travel_portfolio travel_portfolio_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY travel_portfolio
    ADD CONSTRAINT travel_portfolio_pkey PRIMARY KEY (user_id);


--
-- Name: trip_basic trip_basic_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_basic
    ADD CONSTRAINT trip_basic_pkey PRIMARY KEY (trip_id);


--
-- Name: trip_cost trip_cost_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_cost
    ADD CONSTRAINT trip_cost_pkey PRIMARY KEY (trip_id);


--
-- Name: trip_date trip_date_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_date
    ADD CONSTRAINT trip_date_pkey PRIMARY KEY (trip_id);


--
-- Name: trip trip_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip
    ADD CONSTRAINT trip_pkey PRIMARY KEY (trip_id);


--
-- Name: trip_request trip_request_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_request
    ADD CONSTRAINT trip_request_pkey PRIMARY KEY (trip_id);


--
-- Name: trip_route trip_route_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_route
    ADD CONSTRAINT trip_route_pkey PRIMARY KEY (trip_id);


--
-- Name: video video_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY video
    ADD CONSTRAINT video_pkey PRIMARY KEY (video_id);


--
-- Name: album album_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY album
    ADD CONSTRAINT album_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: contribute contribute_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY contribute
    ADD CONSTRAINT contribute_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: ee ee_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY ee
    ADD CONSTRAINT ee_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: event_basics event_basics_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_basics
    ADD CONSTRAINT event_basics_event_id_fkey FOREIGN KEY (event_id) REFERENCES event(event_id);


--
-- Name: event_basics event_basics_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_basics
    ADD CONSTRAINT event_basics_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: event_location event_location_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_location
    ADD CONSTRAINT event_location_event_id_fkey FOREIGN KEY (event_id) REFERENCES event(event_id);


--
-- Name: event_location event_location_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_location
    ADD CONSTRAINT event_location_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: event_misc event_misc_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_misc
    ADD CONSTRAINT event_misc_event_id_fkey FOREIGN KEY (event_id) REFERENCES event(event_id);


--
-- Name: event_misc event_misc_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_misc
    ADD CONSTRAINT event_misc_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: event_photo event_photo_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_photo
    ADD CONSTRAINT event_photo_event_id_fkey FOREIGN KEY (event_id) REFERENCES event(event_id);


--
-- Name: event_photo event_photo_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_photo
    ADD CONSTRAINT event_photo_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: event_request event_request_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_request
    ADD CONSTRAINT event_request_event_id_fkey FOREIGN KEY (event_id) REFERENCES event(event_id);


--
-- Name: event_request event_request_trip_admin_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_request
    ADD CONSTRAINT event_request_trip_admin_fkey FOREIGN KEY (trip_admin) REFERENCES login(user_id);


--
-- Name: event_request event_request_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event_request
    ADD CONSTRAINT event_request_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: event event_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY event
    ADD CONSTRAINT event_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: feedback feedback_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY feedback
    ADD CONSTRAINT feedback_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: hi hi_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY hi
    ADD CONSTRAINT hi_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: misc misc_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY misc
    ADD CONSTRAINT misc_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: photo photo_album_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY photo
    ADD CONSTRAINT photo_album_id_fkey FOREIGN KEY (album_id) REFERENCES album(album_id);


--
-- Name: photo photo_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY photo
    ADD CONSTRAINT photo_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: pi pi_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY pi
    ADD CONSTRAINT pi_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: privacy_setting privacy_setting_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY privacy_setting
    ADD CONSTRAINT privacy_setting_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: story story_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY story
    ADD CONSTRAINT story_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: travel_portfolio travel_portfolio_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY travel_portfolio
    ADD CONSTRAINT travel_portfolio_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: trip_basic trip_basic_trip_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_basic
    ADD CONSTRAINT trip_basic_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES trip(trip_id);


--
-- Name: trip_basic trip_basic_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_basic
    ADD CONSTRAINT trip_basic_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: trip_cost trip_cost_trip_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_cost
    ADD CONSTRAINT trip_cost_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES trip(trip_id);


--
-- Name: trip_cost trip_cost_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_cost
    ADD CONSTRAINT trip_cost_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: trip_date trip_date_trip_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_date
    ADD CONSTRAINT trip_date_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES trip(trip_id);


--
-- Name: trip_date trip_date_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_date
    ADD CONSTRAINT trip_date_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: trip_request trip_request_trip_admin_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_request
    ADD CONSTRAINT trip_request_trip_admin_fkey FOREIGN KEY (trip_admin) REFERENCES login(user_id);


--
-- Name: trip_request trip_request_trip_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_request
    ADD CONSTRAINT trip_request_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES trip(trip_id);


--
-- Name: trip_route trip_route_trip_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_route
    ADD CONSTRAINT trip_route_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES trip(trip_id);


--
-- Name: trip_route trip_route_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY trip_route
    ADD CONSTRAINT trip_route_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- Name: video video_album_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY video
    ADD CONSTRAINT video_album_id_fkey FOREIGN KEY (album_id) REFERENCES album(album_id);


--
-- Name: video video_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY video
    ADD CONSTRAINT video_user_id_fkey FOREIGN KEY (user_id) REFERENCES login(user_id);


--
-- PostgreSQL database dump complete
--

